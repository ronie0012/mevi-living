{
  "info": {
    "name": "Mevi Living API Collection",
    "description": "Complete API collection for testing Mevi Living website APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "jwtToken",
      "value": "",
      "type": "string"
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{authToken}}",
        "type": "string"
      }
    ]
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Sign In - Admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.token) {",
                  "        pm.collectionVariables.set('authToken', response.token);",
                  "        console.log('Admin token saved to collection variables');",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@localhost.com\",\n  \"password\": \"admin123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/sign-in",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "sign-in"]
            },
            "description": "Sign in as admin user - automatically saves token to collection variables"
          }
        },
        {
          "name": "Sign In - Regular User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.token) {",
                  "        pm.collectionVariables.set('authToken', response.token);",
                  "        console.log('User token saved to collection variables');",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@localhost.com\",\n  \"password\": \"user123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/sign-in",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "sign-in"]
            },
            "description": "Sign in as regular user - automatically saves token to collection variables"
          }
        },
        {
          "name": "Get Sign In Info",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/auth/sign-in",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "sign-in"]
            },
            "description": "Get information about the sign-in endpoint"
          }
        },
        {
          "name": "Verify Token - POST",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": \"{{authToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/verify-token",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "verify-token"]
            },
            "description": "Verify JWT token by sending it in request body"
          }
        },
        {
          "name": "Verify Token - GET",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/verify-token",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "verify-token"]
            },
            "description": "Verify JWT token via Authorization header"
          }
        },
        {
          "name": "Auth Handler - GET",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/auth/callback",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "callback"]
            },
            "description": "Auth handler endpoint (catch-all route)"
          }
        },
        {
          "name": "Auth Handler - POST",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/signin",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "signin"]
            },
            "description": "Auth handler POST endpoint (catch-all route)"
          }
        }
      ]
    },
    {
      "name": "JWT Testing",
      "item": [
        {
          "name": "Generate JWT Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.token) {",
                  "        pm.collectionVariables.set('jwtToken', response.token);",
                  "        console.log('JWT token saved to collection variables');",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/test-jwt",
              "host": ["{{baseUrl}}"],
              "path": ["api", "test-jwt"]
            },
            "description": "Generate JWT token for authenticated user - requires valid auth token"
          }
        },
        {
          "name": "Verify JWT Token",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwtToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/test-jwt",
              "host": ["{{baseUrl}}"],
              "path": ["api", "test-jwt"]
            },
            "description": "Verify JWT token via Authorization header"
          }
        }
      ]
    },
    {
      "name": "Admin - User Management",
      "item": [
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/users",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "users"]
            },
            "description": "Get list of all users (admin only)"
          }
        },
        {
          "name": "Assign Role to User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"user_456\",\n  \"roleName\": \"moderator\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/admin/assign-role",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "assign-role"]
            },
            "description": "Assign role to user (admin only). Valid roles: admin, moderator, user"
          }
        },
        {
          "name": "Remove Role from User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"user_456\",\n  \"roleName\": \"moderator\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/admin/remove-role",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "remove-role"]
            },
            "description": "Remove role from user (admin only). Cannot remove admin role from self."
          }
        }
      ]
    },
    {
      "name": "Admin - Roles & Permissions",
      "item": [
        {
          "name": "Get All Roles",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/roles",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "roles"]
            },
            "description": "Get list of all roles with user counts (admin only)"
          }
        },
        {
          "name": "Get All Permissions",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/permissions",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "permissions"]
            },
            "description": "Get list of all permissions (admin only)"
          }
        }
      ]
    },
    {
      "name": "Chat System",
      "item": [
        {
          "name": "Send Chat Message",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"message\": \"Hello, I need help with my order #ORD-123456-ABCD\",\n  \"sessionId\": \"session_12345\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/chat/send",
              "host": ["{{baseUrl}}"],
              "path": ["api", "chat", "send"]
            },
            "description": "Send a chat message and get AI response"
          }
        },
        {
          "name": "Ask About Products",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"message\": \"Tell me about your serveware collection\",\n  \"sessionId\": \"session_12345\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/chat/send",
              "host": ["{{baseUrl}}"],
              "path": ["api", "chat", "send"]
            },
            "description": "Ask about products and get recommendations"
          }
        },
        {
          "name": "Ask About Windsor Bloom",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"message\": \"What can you tell me about Windsor Bloom plates?\",\n  \"sessionId\": \"session_12345\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/chat/send",
              "host": ["{{baseUrl}}"],
              "path": ["api", "chat", "send"]
            },
            "description": "Ask about specific Windsor Bloom products"
          }
        },
        {
          "name": "Ask About Pricing",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"message\": \"How much does the Alba Trayette cost?\",\n  \"sessionId\": \"session_12345\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/chat/send",
              "host": ["{{baseUrl}}"],
              "path": ["api", "chat", "send"]
            },
            "description": "Ask about product pricing"
          }
        },
        {
          "name": "Ask About Shipping",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"message\": \"What are your shipping options?\",\n  \"sessionId\": \"session_12345\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/chat/send",
              "host": ["{{baseUrl}}"],
              "path": ["api", "chat", "send"]
            },
            "description": "Ask about shipping and delivery options"
          }
        }
      ]
    },
    {
      "name": "Error Testing",
      "item": [
        {
          "name": "Unauthorized Access - Admin Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/admin/users",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "users"]
            },
            "description": "Test unauthorized access to admin endpoint (should return 401)"
          }
        },
        {
          "name": "Invalid JWT Token",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer invalid_token_here",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/test-jwt",
              "host": ["{{baseUrl}}"],
              "path": ["api", "test-jwt"]
            },
            "description": "Test with invalid JWT token (should return 401)"
          }
        },
        {
          "name": "Invalid Sign In Credentials",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"wrong@email.com\",\n  \"password\": \"wrongpassword\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/sign-in",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "sign-in"]
            },
            "description": "Test with invalid credentials (should return 401)"
          }
        },
        {
          "name": "Missing Required Fields - Chat",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"message\": \"Hello\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/chat/send",
              "host": ["{{baseUrl}}"],
              "path": ["api", "chat", "send"]
            },
            "description": "Test missing sessionId field (should return 400)"
          }
        },
        {
          "name": "Invalid Role Assignment",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"user_456\",\n  \"roleName\": \"invalidrole\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/admin/assign-role",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "assign-role"]
            },
            "description": "Test with invalid role name (should return 400)"
          }
        }
      ]
    }
  ]
}